{
	"version": 1,
	"collections": [
		{
			"id": "e20a4633-f107-4d94-b5ef-c753fc61d93a",
			"name": "Leo-API",
			"description": "",
			"auth": null,
			"events": null,
			"variables": [],
			"order": [],
			"folders_order": [
				"761037a4-5be6-4096-9227-d7cb6e1bdfde",
				"ede03f91-9761-4a38-8945-af83420279d8",
				"2117fcc4-9973-4774-9a19-46b9373c40f8",
				"9bdd8794-a6db-4770-8eec-5be88b1df8a5"
			],
			"folders": [
				{
					"id": "2117fcc4-9973-4774-9a19-46b9373c40f8",
					"name": "Applicants",
					"description": "",
					"auth": null,
					"events": null,
					"collection": "e20a4633-f107-4d94-b5ef-c753fc61d93a",
					"folder": null,
					"order": [
						"aae3e9e2-26a2-44ef-b518-133584321e96",
						"68e07705-b635-4e85-982b-e5296d103fed",
						"d1b1c852-3283-40a6-b92d-1cdebdad1b49",
						"e4d48698-c33d-48ad-b4b3-bb8a185f3744"
					],
					"folders_order": [],
					"collectionId": "e20a4633-f107-4d94-b5ef-c753fc61d93a",
					"folderId": "2117fcc4-9973-4774-9a19-46b9373c40f8"
				},
				{
					"id": "9bdd8794-a6db-4770-8eec-5be88b1df8a5",
					"name": "Matches",
					"description": "",
					"auth": null,
					"events": null,
					"collection": "e20a4633-f107-4d94-b5ef-c753fc61d93a",
					"folder": null,
					"order": [
						"000e0018-2afc-40e2-a020-30fe77ed7d2b",
						"a30bccc9-1b86-4ec8-a3df-cf4cc7cb8a36"
					],
					"folders_order": [],
					"collectionId": "e20a4633-f107-4d94-b5ef-c753fc61d93a",
					"folderId": "9bdd8794-a6db-4770-8eec-5be88b1df8a5"
				},
				{
					"id": "761037a4-5be6-4096-9227-d7cb6e1bdfde",
					"name": "Positions",
					"description": "",
					"auth": null,
					"events": null,
					"collection": "e20a4633-f107-4d94-b5ef-c753fc61d93a",
					"folder": null,
					"order": [
						"38ed5bd6-8e70-4175-b66f-15eca025c323",
						"00a8bc10-7741-4456-bd0f-175606254d31",
						"8cdbcd4e-9571-46fb-abaa-cb5b931474a3",
						"c64df069-9330-4850-b683-a50220da4ae6"
					],
					"folders_order": [],
					"collectionId": "e20a4633-f107-4d94-b5ef-c753fc61d93a",
					"folderId": "761037a4-5be6-4096-9227-d7cb6e1bdfde"
				},
				{
					"id": "ede03f91-9761-4a38-8945-af83420279d8",
					"name": "Recruiters",
					"description": "",
					"auth": null,
					"events": null,
					"collection": "e20a4633-f107-4d94-b5ef-c753fc61d93a",
					"folder": null,
					"order": [
						"d6e984b2-3c57-4e0c-bbfb-d3d93f6b0033",
						"547d65fb-6053-474a-b369-61c7a8764ee8"
					],
					"folders_order": [],
					"collectionId": "e20a4633-f107-4d94-b5ef-c753fc61d93a",
					"folderId": "ede03f91-9761-4a38-8945-af83420279d8"
				}
			],
			"requests": [
				{
					"id": "000e0018-2afc-40e2-a020-30fe77ed7d2b",
					"name": "get Match",
					"url": "{{API_URL}}/matches/1",
					"description": "",
					"data": null,
					"dataMode": null,
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "c2072ede-7fac-41dd-9d85-0ccd69c73e96",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"first match is SIT Career day\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(1);",
									"    pm.expect(jsonData.name).to.eql(\"SIT Career day\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": "9bdd8794-a6db-4770-8eec-5be88b1df8a5",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\npm.test(\"first match is SIT Career day\", function () {\n    var jsonData = pm.response.json();\n    pm.expect(jsonData.id).to.eql(1);\n    pm.expect(jsonData.name).to.eql(\"SIT Career day\");\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "e20a4633-f107-4d94-b5ef-c753fc61d93a",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "00a8bc10-7741-4456-bd0f-175606254d31",
					"name": "get Position by Match Id",
					"url": "{{API_URL}}/matches/1/positions",
					"description": "",
					"data": null,
					"dataMode": null,
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "adb5edf5-0ce4-4779-862f-959c76381c28",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Software Engineer is id= 1 , money= ฿10,000-฿15,000\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].name).to.eql(\"Software Engineer\");",
									"    pm.expect(jsonData[0].money).to.eql(\"฿10,000-฿15,000\");",
									"    pm.expect(jsonData[0].recruiter.name).to.eql(\"Microsoft Word\");",
									"});",
									"",
									"pm.test(\"Developer is id= 2 , money= ฿10,000-฿15,000\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[1].name).to.eql(\"Developer\");",
									"    pm.expect(jsonData[1].money).to.eql(\"฿10,000-฿15,000\");",
									"    pm.expect(jsonData[1].recruiter.name).to.eql(\"Microsoft Word\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": "761037a4-5be6-4096-9227-d7cb6e1bdfde",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\npm.test(\"Software Engineer is id= 1 , money= ฿10,000-฿15,000\", function () {\n    var jsonData = pm.response.json();\n    pm.expect(jsonData[0].name).to.eql(\"Software Engineer\");\n    pm.expect(jsonData[0].money).to.eql(\"฿10,000-฿15,000\");\n    pm.expect(jsonData[0].recruiter.name).to.eql(\"Microsoft Word\");\n});\n\npm.test(\"Developer is id= 2 , money= ฿10,000-฿15,000\", function () {\n    var jsonData = pm.response.json();\n    pm.expect(jsonData[1].name).to.eql(\"Developer\");\n    pm.expect(jsonData[1].money).to.eql(\"฿10,000-฿15,000\");\n    pm.expect(jsonData[1].recruiter.name).to.eql(\"Microsoft Word\");\n});\n",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "e20a4633-f107-4d94-b5ef-c753fc61d93a",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "38ed5bd6-8e70-4175-b66f-15eca025c323",
					"name": "get Applicants who rank position by matchId and positionId",
					"url": "{{API_URL}}/matches/1/positions/1/applicants",
					"description": "",
					"data": [],
					"dataMode": "raw",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "466b1da1-7ac4-4c56-96ae-1773e5a69312",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"number of applicants is two\", function(){\r",
									"    pm.expect(pm.response.json().length).to.eq(2);\r",
									"});\r",
									"var schema = [ {\r",
									"        \"id\": \"integer\",\r",
									"        \"matchId\": \"integer\",\r",
									"        \"applicantRanking\": [\r",
									"            {\r",
									"                \"id\": \"integer\",\r",
									"                \"sequence\": \"integer\",\r",
									"                \"matchId\": \"integer\",\r",
									"                \"position\": {\r",
									"                    \"id\": \"integer\",\r",
									"                    \"name\": \"String\",\r",
									"                    \"capacity\": \"integer\",\r",
									"                    \"matchId\": \"integer\",\r",
									"                    \"recruiterRankings\": [\r",
									"                        {\r",
									"                            \"id\": \"integer\",\r",
									"                            \"sequence\": \"integer\",\r",
									"                            \"matchId\": \"integer\",\r",
									"                            \"applicantMatchId\": \"interger\"\r",
									"                        }\r",
									"                    ],\r",
									"                    \"money\": \"String\"\r",
									"                }\r",
									"            }\r",
									"        ],\r",
									"        \"applicantId\": \"integer\"\r",
									"    }];\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"  pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": "761037a4-5be6-4096-9227-d7cb6e1bdfde",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"preRequestScript": null,
					"tests": "pm.test(\"response is ok\", function () {\r\n    pm.response.to.have.status(200);\r\n});\r\n\r\n\r\npm.test(\"number of applicants is two\", function(){\r\n    pm.expect(pm.response.json().length).to.eq(2);\r\n});\r\nvar schema = [ {\r\n        \"id\": \"integer\",\r\n        \"matchId\": \"integer\",\r\n        \"applicantRanking\": [\r\n            {\r\n                \"id\": \"integer\",\r\n                \"sequence\": \"integer\",\r\n                \"matchId\": \"integer\",\r\n                \"position\": {\r\n                    \"id\": \"integer\",\r\n                    \"name\": \"String\",\r\n                    \"capacity\": \"integer\",\r\n                    \"matchId\": \"integer\",\r\n                    \"recruiterRankings\": [\r\n                        {\r\n                            \"id\": \"integer\",\r\n                            \"sequence\": \"integer\",\r\n                            \"matchId\": \"integer\",\r\n                            \"applicantMatchId\": \"interger\"\r\n                        }\r\n                    ],\r\n                    \"money\": \"String\"\r\n                }\r\n            }\r\n        ],\r\n        \"applicantId\": \"integer\"\r\n    }];\r\n\r\npm.test('Schema is valid', function() {\r\n  pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "e20a4633-f107-4d94-b5ef-c753fc61d93a",
					"rawModeData": "",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "547d65fb-6053-474a-b369-61c7a8764ee8",
					"name": "get Position Ranking ",
					"url": "{{API_URL}}/matches/1/recruiters/positions/1/ranking",
					"description": "",
					"data": null,
					"dataMode": null,
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "3e7757f8-8672-48ba-acaf-8ad3031b302d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Ranking have 2 in list\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(2);",
									"});",
									"",
									"var schema = [",
									"    {",
									"        \"id\": \"integer\",",
									"        \"sequence\": \"integer\",",
									"        \"matchId\": \"integer\",",
									"        \"applicantMatchId\": \"integer\"",
									"    }",
									"];",
									"",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": "ede03f91-9761-4a38-8945-af83420279d8",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\npm.test(\"Ranking have 2 in list\", function () {\n    var jsonData = pm.response.json();\n    pm.expect(jsonData.length).to.eql(2);\n});\n\nvar schema = [\n    {\n        \"id\": \"integer\",\n        \"sequence\": \"integer\",\n        \"matchId\": \"integer\",\n        \"applicantMatchId\": \"integer\"\n    }\n];\n\n\npm.test('Schema is valid', function() {\n  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\n\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "e20a4633-f107-4d94-b5ef-c753fc61d93a",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "68e07705-b635-4e85-982b-e5296d103fed",
					"name": "get Applicant by Match Id",
					"url": "{{API_URL}}/matches/1/applicants",
					"description": "",
					"data": null,
					"dataMode": null,
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "ee8aaa25-7847-4ca9-bc25-df649d0f9a72",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(2);",
									"});",
									"",
									"pm.test(\"JSON have id = 1\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].id).to.eql(1);",
									"    ",
									"});",
									"var schema = {",
									"        \"id\": \"integer\",",
									"        \"applicantRanking\": [",
									"            {",
									"                \"id\": \"integer\",",
									"                \"sequence\": \"integer\",",
									"                \"position\": {",
									"                    \"id\": \"integer\",",
									"                    \"name\": \"string\",",
									"                    \"capacity\": \"integer\",",
									"                    \"recruiterRankings\": [",
									"                        {",
									"                            \"id\": \"integer\",",
									"                            \"sequence\": \"integer\",",
									"                            \"applicantMatchId\": \"integer\"",
									"                        },",
									"                        {",
									"                            \"id\": \"integer\",",
									"                            \"sequence\": \"integer\",",
									"                            \"applicantMatchId\": \"integer\"",
									"                        }",
									"                    ],",
									"                    \"money\": \"integer\"",
									"                }",
									"            }",
									"        ]",
									"    };",
									"",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": "2117fcc4-9973-4774-9a19-46b9373c40f8",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\npm.test(\"Your test name\", function () {\n    var jsonData = pm.response.json();\n    pm.expect(jsonData.length).to.eql(2);\n});\n\npm.test(\"JSON have id = 1\", function () {\n    var jsonData = pm.response.json();\n    pm.expect(jsonData[0].id).to.eql(1);\n    \n});\nvar schema = {\n        \"id\": \"integer\",\n        \"applicantRanking\": [\n            {\n                \"id\": \"integer\",\n                \"sequence\": \"integer\",\n                \"position\": {\n                    \"id\": \"integer\",\n                    \"name\": \"string\",\n                    \"capacity\": \"integer\",\n                    \"recruiterRankings\": [\n                        {\n                            \"id\": \"integer\",\n                            \"sequence\": \"integer\",\n                            \"applicantMatchId\": \"integer\"\n                        },\n                        {\n                            \"id\": \"integer\",\n                            \"sequence\": \"integer\",\n                            \"applicantMatchId\": \"integer\"\n                        }\n                    ],\n                    \"money\": \"integer\"\n                }\n            }\n        ]\n    };\n\n\npm.test('Schema is valid', function() {\n  pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\n\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "e20a4633-f107-4d94-b5ef-c753fc61d93a",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "8cdbcd4e-9571-46fb-abaa-cb5b931474a3",
					"name": "put Recruiter Ranking",
					"url": "{{API_URL}}/matches/1/positions/1/ranking",
					"description": "",
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"description": "",
							"key": "Content-Type",
							"name": "Content-Type",
							"type": "text",
							"value": "application/json"
						}
					],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "b9a1a77b-7136-434b-82bd-ffddc0aed160",
								"exec": [
									"pm.test(\"Status code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": "761037a4-5be6-4096-9227-d7cb6e1bdfde",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 202\", function () {\n    pm.response.to.have.status(202);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "e20a4633-f107-4d94-b5ef-c753fc61d93a",
					"rawModeData": "[\n    {\n        \"applicantMatchId\": \"2\",\n        \"sequence\": \"1\"\n    },\n    {\n        \"applicantMatchId\": \"1\",\n        \"sequence\": \"2\"\n    }\n]",
					"headers": "Content-Type: application/json\n",
					"pathVariables": {}
				},
				{
					"id": "a30bccc9-1b86-4ec8-a3df-cf4cc7cb8a36",
					"name": "getApplicantByMatchId",
					"url": "{{API_URL}}/matches/1/applicants",
					"description": "",
					"data": null,
					"dataMode": null,
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "19f57c46-076b-47c0-ae98-f6399279c66c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": "9bdd8794-a6db-4770-8eec-5be88b1df8a5",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "e20a4633-f107-4d94-b5ef-c753fc61d93a",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "aae3e9e2-26a2-44ef-b518-133584321e96",
					"name": "get Applicant Ranking ",
					"url": "{{API_URL}}/matches/1/applicants/ranking",
					"description": "",
					"data": null,
					"dataMode": null,
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "08b6b145-9eae-4d60-beb9-f7e36c64fddb",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"First rank is seqeunce 1 and position name is Software Engineer\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].position.name).to.eql(\"Software Engineer\");",
									"});",
									"",
									"var schema = [",
									"    {",
									"        \"id\": \"integer\",",
									"        \"sequence\": \"integer\",",
									"        \"matchId\": \"integer\",",
									"        \"position\": {",
									"            \"id\": \"integer\",",
									"            \"name\": \"string\",",
									"            \"capacity\": \"integer\",",
									"            \"matchId\": \"integer\",",
									"            \"recruiterRankings\": [",
									"                {",
									"                    \"id\": \"integer\",",
									"                    \"sequence\": \"integer\",",
									"                    \"matchId\": \"integer\",",
									"                    \"applicantMatchId\": \"integer\"",
									"                }",
									"            ],",
									"            \"money\": \"String\"",
									"        }",
									"    }];",
									"",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": "2117fcc4-9973-4774-9a19-46b9373c40f8",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\npm.test(\"First rank is seqeunce 1 and position name is Software Engineer\", function () {\n    var jsonData = pm.response.json();\n    pm.expect(jsonData[0].position.name).to.eql(\"Software Engineer\");\n});\n\nvar schema = [\n    {\n        \"id\": \"integer\",\n        \"sequence\": \"integer\",\n        \"matchId\": \"integer\",\n        \"position\": {\n            \"id\": \"integer\",\n            \"name\": \"string\",\n            \"capacity\": \"integer\",\n            \"matchId\": \"integer\",\n            \"recruiterRankings\": [\n                {\n                    \"id\": \"integer\",\n                    \"sequence\": \"integer\",\n                    \"matchId\": \"integer\",\n                    \"applicantMatchId\": \"integer\"\n                }\n            ],\n            \"money\": \"String\"\n        }\n    }];\n\n\npm.test('Schema is valid', function() {\n  pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "e20a4633-f107-4d94-b5ef-c753fc61d93a",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "c64df069-9330-4850-b683-a50220da4ae6",
					"name": "create Recruiter Ranking",
					"url": "{{API_URL}}/matches/1/positions/1/ranking",
					"description": "",
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"description": "",
							"key": "Content-Type",
							"name": "Content-Type",
							"type": "text",
							"value": "application/json"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "0cbed30a-bfa4-4267-9d23-4b6010ccb512",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": "761037a4-5be6-4096-9227-d7cb6e1bdfde",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 201\", function () {\n    pm.response.to.have.status(201);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "e20a4633-f107-4d94-b5ef-c753fc61d93a",
					"rawModeData": "[\n    {\n        \"applicantMatchId\": \"1\",\n        \"sequence\": \"1\"\n    },\n    {\n        \"applicantMatchId\": \"2\",\n        \"sequence\": \"2\"\n    }\n]",
					"headers": "Content-Type: application/json\n",
					"pathVariables": {}
				},
				{
					"id": "d1b1c852-3283-40a6-b92d-1cdebdad1b49",
					"name": "put Applicant Ranking",
					"url": "{{API_URL}}/matches/1/applicants/ranking",
					"description": "",
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"name": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "64a760fb-6eec-419c-ae90-b9145565ffdf",
								"exec": [
									"pm.test(\"Status code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": "2117fcc4-9973-4774-9a19-46b9373c40f8",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 202\", function () {\n    pm.response.to.have.status(202);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "e20a4633-f107-4d94-b5ef-c753fc61d93a",
					"rawModeData": "[{\n\t\"sequence\":\"1\",\n\t\"positionId\":\"1\"\n}]",
					"headers": "Content-Type: application/json\n",
					"pathVariables": {}
				},
				{
					"id": "d6e984b2-3c57-4e0c-bbfb-d3d93f6b0033",
					"name": "get Positions by Recruiter Id and Match id",
					"url": "{{API_URL}}/matches/1/recruiters/positions",
					"description": "",
					"data": null,
					"dataMode": null,
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "a7575495-feed-4665-8eab-825a669c5d1d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Json length is equal 2\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(2);",
									"});",
									"",
									"var schema = [",
									"    {",
									"        \"id\": \"integer\",",
									"        \"name\": \"string\",",
									"        \"capacity\": \"integer\",",
									"        \"matchId\": \"integer\",",
									"        \"recruiterRankings\": [",
									"            {",
									"                \"id\": \"integer\",",
									"                \"sequence\": \"integer\",",
									"                \"matchId\": \"integer\",",
									"                \"applicantMatchId\": \"integer\"",
									"            }",
									"        ],",
									"        \"money\": \"String\"",
									"    }",
									"];",
									"",
									"pm.test('Schema is valid', function() {",
									"    var jsonData = pm.response.json();",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": "ede03f91-9761-4a38-8945-af83420279d8",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\npm.test(\"Json length is equal 2\", function () {\n    var jsonData = pm.response.json();\n    pm.expect(jsonData.length).to.eql(2);\n});\n\nvar schema = [\n    {\n        \"id\": \"integer\",\n        \"name\": \"string\",\n        \"capacity\": \"integer\",\n        \"matchId\": \"integer\",\n        \"recruiterRankings\": [\n            {\n                \"id\": \"integer\",\n                \"sequence\": \"integer\",\n                \"matchId\": \"integer\",\n                \"applicantMatchId\": \"integer\"\n            }\n        ],\n        \"money\": \"String\"\n    }\n];\n\npm.test('Schema is valid', function() {\n    var jsonData = pm.response.json();\n  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "e20a4633-f107-4d94-b5ef-c753fc61d93a",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "e4d48698-c33d-48ad-b4b3-bb8a185f3744",
					"name": "create Applicant Ranking",
					"url": "{{API_URL}}/matches/1/applicants/ranking",
					"description": "",
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"name": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "13138b50-f2d1-4a18-8e3c-179b333d38d4",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": "2117fcc4-9973-4774-9a19-46b9373c40f8",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 201\", function () {\n    pm.response.to.have.status(201);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "e20a4633-f107-4d94-b5ef-c753fc61d93a",
					"rawModeData": "[{\n\t\"sequence\":\"3\",\n\t\"positionId\":\"1\"\n}]",
					"headers": "Content-Type: application/json\n",
					"pathVariables": {}
				}
			]
		}
	],
	"environments": [
		{
			"id": "43c900d2-33b9-48b8-a2e7-7881259499da",
			"name": "Leo-API",
			"values": [
				{
					"key": "API_URL",
					"value": "localhost:3306",
					"type": "text",
					"description": "",
					"enabled": true
				}
			]
		},
		{
			"id": "a8678f3e-c825-49d2-a31a-a74fc00e09d8",
			"name": "ProjectPlanner",
			"values": [
				{
					"key": "API_URL",
					"value": "http://localhost:7000",
					"type": "text",
					"description": "",
					"enabled": true
				}
			]
		},
		{
			"id": "c4527355-d90c-4c5c-90fe-387281ab3c89",
			"name": "ProjectPlanner",
			"values": [
				{
					"key": "API_URL",
					"value": "http://localhost:7000",
					"description": "",
					"enabled": true
				}
			]
		},
		{
			"id": "fe9e966d-5b8b-4929-8d1f-ff98fef353e4",
			"name": "Leo-Main Stream",
			"values": [
				{
					"key": "API_URL",
					"value": "https://leo-match.taehub.in.th",
					"type": "text",
					"description": "",
					"enabled": true
				}
			]
		},
		{
			"id": "ae62c12f-81ef-4eb0-9297-97720220e73a",
			"name": "My Workspace - globals",
			"values": []
		}
	],
	"headerPresets": [],
	"globals": []
}